.row
  .col-xs-12
    .page-header
      span.h1 = t(:widgets)
      span.add-item
        = link_to new_widget_path, class: "btn btn-primary"
          i.fa.fa-plus
          | &nbsp;
          = t(:add_model, model: Widget.model_name.human(count: 2))
    p.helper_text
      = t(:widget_infotext, link_to_liquid: link_to('Liquid', 'https://shopify.github.io/liquid', target: '_blank')).html_safe

    nav.navbar.navbar-default
      form.navbar-form.navbar-left
        .form-group
          = form_tag widgets_path, class: "form form-inline pull-right", method: :get
            = text_field_tag :search, params[:search], class: "form-control"
            '&nbsp;
            button.btn.btn-primary<
              i.fa.fa-search
            - if params[:search]
              = link_to widgets_path, class: "btn btn-link"
                = t(:show_all)

    table.table
      thead
        tr
          th = Widget.human_attribute_name(:name)
          / th = Widget.human_attribute_name(:widgettype)
          th = Widget.human_attribute_name(:token)
          th = Widget.human_attribute_name(:description)
          th

      tbody
        - @widgets.each do |widget|
          tr
            td = link_to widget.name, widget
            td = widget.token
            td = widget.description
            td
              .btn-toolbar role="toolbar"
                .btn-group
                  button.btn.btn-default.btn-sm.dropdown-toggle type="button" data-toggle="dropdown"
                    |...
                  ul.dropdown-menu role="menu"
                    - if can? :access, Feature.find_by(key: 'website_integration_javascript')
                      li
                        = link_to widget_path(widget)
                          i.fa.fa-eye
                          '&nbsp;
                          = t(:show)
                    - else
                      li
                        = render "shared/not_in_plan_link", :icon => "fa-copy", :text => t(:show)

                    li
                      - if can? :access, Feature.find_by(key: 'website_integration_javascript')
                        = link_to edit_widget_path(widget)
                          i.fa.fa-edit
                          '&nbsp;
                          = t(:edit)
                      - else
                        li
                          = render "shared/not_in_plan_link", :icon => "fa-copy", :text => t(:edit)
                    li
                      - if can? :access, Feature.find_by(key: 'website_integration_javascript')
                        = link_to widget, data: { confirm: t(:are_you_sure_you_want_to_delete_this_object) }, method: :delete
                          i.fa.fa-remove
                          '&nbsp;
                          = t(:delete)
                      - else
                        li
                          = render "shared/not_in_plan_link", :icon => "fa-copy", :text => t(:delete)

    .row
      .col-xs-12
        = will_paginate @collection, renderer: BootstrapPagination::Rails
